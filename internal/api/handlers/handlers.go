// Code generated by go run -tags scripts scripts/handlers/gen_handlers.go; DO NOT EDIT.
package handlers

import (
	"github.com/labstack/echo/v4"
	"test-project/internal/api"
	"test-project/internal/api/handlers/auth"
	"test-project/internal/api/handlers/books"
	"test-project/internal/api/handlers/common"
	"test-project/internal/api/handlers/googlebooks"
	"test-project/internal/api/handlers/lists"
	"test-project/internal/api/handlers/push"
)

func AttachAllRoutes(s *api.Server) {
	// attach our routes
	s.Router.Routes = []*echo.Route{
		auth.GetUserInfoRoute(s),
		auth.PostChangePasswordRoute(s),
		auth.PostForgotPasswordCompleteRoute(s),
		auth.PostForgotPasswordRoute(s),
		auth.PostLoginRoute(s),
		auth.PostLogoutRoute(s),
		auth.PostRefreshRoute(s),
		auth.PostRegisterRoute(s),
		books.DeleteBookRoute(s),
		books.GetBookByIDRoute(s),
		books.GetSearchUserBooksRoute(s),
		books.GetUserBooksRoute(s),
		books.PostAddGoogleBookRoute(s),
		books.PutUpdateBookRatingAndNotesRoute(s),
		books.PutUpdateBookRatingAndNotesRoute(s),
		common.GetHealthyRoute(s),
		common.GetReadyRoute(s),
		common.GetSwaggerRoute(s),
		common.GetVersionRoute(s),
		googlebooks.GetGoogleBookByIDRoute(s),
		googlebooks.GetGoogleBooksRoute(s),
		lists.DeleteBookFromListRoute(s),
		lists.DeleteListRoute(s),
		lists.GetAllBooksFromListRoute(s),
		lists.GetAllUserListsRoute(s),
		lists.GetListByIDRoute(s),
		lists.PostAddBookToListRoute(s),
		lists.PostCreateListRoute(s),
		lists.PutUpdateListNameRoute(s),
		push.GetPushTestRoute(s),
		push.PostUpdatePushTokenRoute(s),
	}
}
