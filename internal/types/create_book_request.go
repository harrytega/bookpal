// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateBookRequest create book request
//
// swagger:model createBookRequest
type CreateBookRequest struct {

	// author
	// Example: J. K. Rowling
	// Required: true
	Author *string `json:"author"`

	// book description
	// Example: Dark times have come to Hogwarts. After the Dementors' attack on his cousin Dudley, Harry Potter knows that Voldemort will stop at nothing to find him. ...
	BookDescription string `json:"book_description,omitempty"`

	// genre
	// Example: Novel, Fantasy Fiction, Young adult literature
	Genre string `json:"genre,omitempty"`

	// google book ID
	// Example: P3LFEAAAQBAJ
	// Required: true
	GoogleBookID *string `json:"google_book_ID"`

	// image link
	// Example: http://books.google.com/books/content?id=u30YAAAAYAAJ\u0026printsec=frontcover\u0026img=1\u0026zoom=1\u0026source=gbs_api
	ImageLink string `json:"image_link,omitempty"`

	// pages
	// Example: 409
	Pages int32 `json:"pages,omitempty"`

	// publisher
	// Example: Bloomsbury
	Publisher string `json:"publisher,omitempty"`

	// title
	// Example: Harry Potter
	// Required: true
	Title *string `json:"title"`
}

// Validate validates this create book request
func (m *CreateBookRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGoogleBookID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateBookRequest) validateAuthor(formats strfmt.Registry) error {

	if err := validate.Required("author", "body", m.Author); err != nil {
		return err
	}

	return nil
}

func (m *CreateBookRequest) validateGoogleBookID(formats strfmt.Registry) error {

	if err := validate.Required("google_book_ID", "body", m.GoogleBookID); err != nil {
		return err
	}

	return nil
}

func (m *CreateBookRequest) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create book request based on context it is used
func (m *CreateBookRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateBookRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateBookRequest) UnmarshalBinary(b []byte) error {
	var res CreateBookRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
