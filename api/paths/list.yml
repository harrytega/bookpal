  
swagger: "2.0"
info:
  title: bookpal
  version: 0.1.0
paths:
    /api/v1/lists:
      post:
        summary: Creates a new book list.
        description: Creates a new book list with a name.
        operationId: createList
        parameters:
          - name: newList
            in: body
            description: Creates a new book list with a name.
            required: true
            schema:
              $ref: '../definitions/list.yml#/definitions/List'
        responses:
          201: 
            description: List has been created.
          400:
            description: Invalid input

    /api/v1/lists/{list_id}:
      get:
        summary: Returns a list.
        description: Returns a list from its list_id.
        operationId: getList
        parameters:
          - name: list_id
            in: path
            description: ID of list to return.
            required: true
            type: string
            format: uuid
        responses:
          200:
            description: Successful operation.
            schema:
              $ref: '../definitions/list.yml#/definitions/List'
          400:
            description: Invalid ID supplied.
          404:
            description: List not found.

      put:
        summary: Changes the name of a list.
        operationId: changeListName
        parameters:
          - name: list_id
            in: path
            description: ID from list to update
            required: true
            type: string
            format: uuid
          - name: updatedList
            in: body
            description: updated List with a new name.
            required: true
            schema:
              $ref: '../definitions/list.yml#/definitions/List'
        responses:
          200:
            description: Successful operation.
            schema:
              $ref: '../definitions/list.yml#/definitions/List'
          400:
            description: Invalid list ID.

      delete:
        summary: Deletes a list.
        operationId: deleteList
        parameters:
          - name: list_id
            in: path
            description: List ID from the list to delete.
            required: true
            type: string
            format: uuid
        responses:
          204:
            description: Successful Operation.
          400:
            description: Invalid list ID

    /api/v1/lists/{list_id}/books:
      get:
        summary: Returns all the books from the list
        operationId: getAllBooksFromList
        parameters:
          - name: list_id
            in: path
            description: List ID from the list we want the books for.
            required: true
            type: string
            format: uuid
          - name: page
            in: query
            description: Page number
            required: false
            type: integer
            default: 1
          - name: pageSize
            in: query
            description: amount of books per page
            required: false
            type: integer
            default: 10
            maximum: 30
        responses:
          200:
            description: "Succesful Operation"
            schema:
              allOf:
                - type: array
                  items: 
                    $ref: '../definitions/book.yml#/definitions/BookInMyDb'
                - type: object
                  properties: 
                    pagination:
                      $ref: '../definitions/pagination.yml#/definitions/Pagination'
              
      post:
        summary: Saves a book to an existing list.
        operationId: saveBookToList
        parameters:
          - name: list_id
            in: path
            description: List ID to to get the list to add books to.
            required: true
            type: string
            format: uuid
          - name: bookToAddToList
            in: body
            description: Book to add to the list.
            required: true
            schema:
              $ref: '../definitions/book.yml#/definitions/BookInMyDb'
        responses:
          201:
            description: Book succesfully added to list.
          400:
            description: Invalid List ID supplied.
          404:
            description: List not found.
    
    /api/v1/lists/{list_id}/{book_id}:
      get:
        summary: Returns a book from a list.
        operationId: getBookFromList
        parameters:
          - name: list_id
            in: path
            description: ID for the List that is searched on.
            required: true
            type: string
            format: uuid
          - name: book_id
            in: path
            description: ID for the book that is searched for.
            required: true
            type: string
            format: uuid
        responses:
          200:
            description: Found book.
            schema: 
              $ref: '../definitions/book.yml#/definitions/BookInMyDb'
          400:
            description: Invalid IDs
          404:
            description: Book or list couldn't be found.
      
      delete:
        summary: Deletes a specific book from the list.
        operationId: deleteBookFromList
        parameters:
          - name: list_id
            in: path
            description: ID for the List
            required: true
            type: string
            format: uuid
          - name: book_id
            in: path
            description: ID for the book that will be deleted.
            required: true
            type: string
            format: uuid
        responses:
          204:
            description: Successful operation.
          400:
            description: Invalid list or book ID.

    /api/v1/lists/rated:
      get:
        summary: Returns all rated books.
        operationId: getAllRatedBooks
        responses:
          200:
            description: Successful operation.
            schema:
              $ref: '../definitions/list.yml#/definitions/List'






